---
// Script côté client uniquement
---

<button 
  id="theme-toggle" 
  type="button"
  class="p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors"
  aria-label="Changer le thème"
  data-theme-toggle
>
  <span class="dark:hidden">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
    </svg>
  </span>
  <span class="hidden dark:inline">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
    </svg>
  </span>
</button>

<script is:inline>
// Vérifier si le code s'exécute côté client
if (typeof window !== 'undefined') {
  // Fonction pour définir le thème
  const setTheme = (theme) => {
    if (theme === 'dark') {
      document.documentElement.classList.add('dark');
      localStorage.theme = 'dark';
    } else {
      document.documentElement.classList.remove('dark');
      localStorage.theme = 'light';
    }
  };

  // Vérifier le thème au chargement
  if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
    setTheme('dark');
  } else {
    setTheme('light');
  }

  // Ajouter l'écouteur d'événement en utilisant la délégation d'événements
  document.addEventListener('click', (event) => {
    if (event.target.closest('[data-theme-toggle]')) {
      const isDark = document.documentElement.classList.contains('dark');
      setTheme(isDark ? 'light' : 'dark');
    }
  });
}
</script>